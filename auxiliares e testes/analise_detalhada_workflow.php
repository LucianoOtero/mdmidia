<?php
require_once('class.php');

echo "=== AN√ÅLISE DETALHADA DO WORKFLOW - FLYINGDONKEYS ===\n\n";

$client = new EspoApiClient('https://flyingdonkeys.com.br');
$client->setApiKey('7a6c08d438ee131971f561fd836b5e15');

echo "1. Verificando workflows dispon√≠veis...\n";

$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, 'https://flyingdonkeys.com.br/api/v1/Workflow');
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
curl_setopt($ch, CURLOPT_HTTPHEADER, ['X-Api-Key: 7a6c08d438ee131971f561fd836b5e15']);
curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);
curl_setopt($ch, CURLOPT_TIMEOUT, 30);

$response = curl_exec($ch);
$httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
curl_close($ch);

if ($httpCode == 200) {
    $workflows = json_decode($response, true);

    if (isset($workflows['list']) && is_array($workflows['list'])) {
        echo "üìã Total de workflows: " . count($workflows['list']) . "\n\n";

        $leadWorkflows = [];

        foreach ($workflows['list'] as $workflow) {
            if (
                stripos($workflow['name'], 'lead') !== false ||
                stripos($workflow['name'], 'opportunity') !== false ||
                stripos($workflow['name'], 'Lead') !== false ||
                stripos($workflow['name'], 'Opportunity') !== false
            ) {
                $leadWorkflows[] = $workflow;
            }
        }

        if (!empty($leadWorkflows)) {
            echo "üéØ WORKFLOWS RELACIONADOS A LEAD/OPPORTUNITY:\n";
            foreach ($leadWorkflows as $workflow) {
                echo "   üìã Nome: " . $workflow['name'] . "\n";
                echo "   üîÑ Status: " . ($workflow['isActive'] ? '‚úÖ ATIVO' : '‚ùå INATIVO') . "\n";
                echo "   üìÖ Criado: " . ($workflow['createdAt'] ?? 'N/A') . "\n";
                echo "   üÜî ID: " . $workflow['id'] . "\n";
                echo "   üìù Descri√ß√£o: " . ($workflow['description'] ?? 'Sem descri√ß√£o') . "\n";

                // Verificar detalhes do workflow
                $workflowId = $workflow['id'];
                $ch = curl_init();
                curl_setopt($ch, CURLOPT_URL, "https://flyingdonkeys.com.br/api/v1/Workflow/$workflowId");
                curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
                curl_setopt($ch, CURLOPT_HTTPHEADER, ['X-Api-Key: 7a6c08d438ee131971f561fd836b5e15']);
                curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);
                curl_setopt($ch, CURLOPT_TIMEOUT, 30);

                $workflowDetail = curl_exec($ch);
                $detailHttpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
                curl_close($ch);

                if ($detailHttpCode == 200) {
                    $workflowData = json_decode($workflowDetail, true);

                    echo "   üìä Detalhes:\n";
                    echo "      üéØ Entidade: " . ($workflowData['entityType'] ?? 'N/A') . "\n";
                    echo "      üîÑ Evento: " . ($workflowData['type'] ?? 'N/A') . "\n";
                    echo "      üìã Condi√ß√µes: " . (isset($workflowData['conditions']) ? 'Configuradas' : 'N√£o configuradas') . "\n";
                    echo "      ‚ö° A√ß√µes: " . (isset($workflowData['actions']) ? 'Configuradas' : 'N√£o configuradas') . "\n";

                    if (isset($workflowData['conditions']) && is_array($workflowData['conditions'])) {
                        echo "      üìù N√∫mero de condi√ß√µes: " . count($workflowData['conditions']) . "\n";
                    }

                    if (isset($workflowData['actions']) && is_array($workflowData['actions'])) {
                        echo "      ‚ö° N√∫mero de a√ß√µes: " . count($workflowData['actions']) . "\n";

                        foreach ($workflowData['actions'] as $action) {
                            echo "         üîß A√ß√£o: " . ($action['type'] ?? 'N/A') . "\n";
                            if (isset($action['targetEntityType'])) {
                                echo "            üéØ Entidade alvo: " . $action['targetEntityType'] . "\n";
                            }
                        }
                    }
                }

                echo "\n";
            }
        } else {
            echo "‚ö†Ô∏è NENHUM WORKFLOW LEAD/OPPORTUNITY ENCONTRADO!\n\n";
        }
    } else {
        echo "‚ùå N√£o foi poss√≠vel obter workflows\n";
    }
} else {
    echo "‚ùå Erro ao buscar workflows - HTTP: $httpCode\n";
}

echo "2. Testando cria√ß√£o de lead para verificar execu√ß√£o do workflow...\n";

// Criar um lead de teste para verificar se o workflow executa
$testLeadData = [
    'firstName' => 'Teste Workflow ' . date('H:i:s'),
    'emailAddress' => 'teste.workflow@teste.com',
    'cCelular' => '11999999999',
    'addressPostalCode' => '00000-000',
    'source' => 'Teste',
    'status' => 'New'
];

$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, 'https://flyingdonkeys.com.br/api/v1/Lead');
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
curl_setopt($ch, CURLOPT_POST, true);
curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($testLeadData));
curl_setopt($ch, CURLOPT_HTTPHEADER, [
    'X-Api-Key: 7a6c08d438ee131971f561fd836b5e15',
    'Content-Type: application/json'
]);
curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);
curl_setopt($ch, CURLOPT_TIMEOUT, 30);

$testResponse = curl_exec($ch);
$testHttpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
curl_close($ch);

if ($testHttpCode == 200) {
    $testLead = json_decode($testResponse, true);
    echo "‚úÖ Lead de teste criado com sucesso!\n";
    echo "   üÜî ID: " . $testLead['id'] . "\n";
    echo "   üìù Nome: " . $testLead['firstName'] . "\n";
    echo "   üìÖ Criado: " . $testLead['createdAt'] . "\n";

    // Aguardar um pouco e verificar se a oportunidade foi criada
    echo "\n   ‚è≥ Aguardando execu√ß√£o do workflow...\n";
    sleep(3);

    // Verificar o lead novamente
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, 'https://flyingdonkeys.com.br/api/v1/Lead/' . $testLead['id']);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_HTTPHEADER, ['X-Api-Key: 7a6c08d438ee131971f561fd836b5e15']);
    curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);
    curl_setopt($ch, CURLOPT_TIMEOUT, 30);

    $updatedLead = curl_exec($ch);
    $updatedHttpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    curl_close($ch);

    if ($updatedHttpCode == 200) {
        $leadData = json_decode($updatedLead, true);

        if (!empty($leadData['createdOpportunityId'])) {
            echo "   ‚úÖ WORKFLOW EXECUTOU! Oportunidade criada: " . $leadData['createdOpportunityId'] . "\n";
        } else {
            echo "   ‚ùå WORKFLOW N√ÉO EXECUTOU! Nenhuma oportunidade criada.\n";
        }
    }
} else {
    echo "‚ùå Erro ao criar lead de teste - HTTP: $testHttpCode\n";
    echo "Resposta: " . substr($testResponse, 0, 200) . "...\n";
}

echo "\n" . str_repeat("=", 60) . "\n";
echo "üéØ CONCLUS√ÉO DA AN√ÅLISE:\n";
echo str_repeat("=", 60) . "\n";

echo "\nüí° DIAGN√ìSTICO:\n";
echo "1. Se workflow est√° ativo mas n√£o executa ‚Üí Problema nas condi√ß√µes\n";
echo "2. Se workflow executa mas n√£o cria oportunidade ‚Üí Problema nas a√ß√µes\n";
echo "3. Se n√£o h√° workflow ‚Üí Precisa ser criado\n";
echo "4. Se h√° erro na cria√ß√£o do lead ‚Üí Problema de permiss√µes\n";

echo "\nüìã PR√ìXIMOS PASSOS:\n";
echo "1. Verificar configura√ß√£o do workflow no EspoCRM\n";
echo "2. Testar condi√ß√µes manualmente\n";
echo "3. Verificar a√ß√µes do workflow\n";
echo "4. Confirmar permiss√µes de cria√ß√£o de oportunidade\n";

echo "\n‚úÖ AN√ÅLISE CONCLU√çDA!\n";
