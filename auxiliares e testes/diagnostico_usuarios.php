<?php
require_once('class.php');

echo "=== DIAGN√ìSTICO DE USU√ÅRIOS FLYINGDONKEYS ===\n\n";

$client = new EspoApiClient('https://flyingdonkeys.com.br');
$client->setApiKey('7a6c08d438ee131971f561fd836b5e15');

echo "1. Verificando usu√°rio atual...\n";

$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, 'https://flyingdonkeys.com.br/api/v1/App/user');
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
curl_setopt($ch, CURLOPT_HTTPHEADER, ['X-Api-Key: 7a6c08d438ee131971f561fd836b5e15']);
curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);
curl_setopt($ch, CURLOPT_TIMEOUT, 30);

$response = curl_exec($ch);
$httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
curl_close($ch);

if ($httpCode == 200) {
    $userData = json_decode($response, true);
    echo "‚úÖ Usu√°rio atual conectado:\n";
    echo "   üë§ Nome: " . ($userData['userName'] ?? 'N/A') . "\n";
    echo "   üÜî ID: " . ($userData['id'] ?? 'N/A') . "\n";
    echo "   üìä Tipo: " . ($userData['type'] ?? 'N/A') . "\n";
    echo "   ‚úÖ Ativo: " . ($userData['isActive'] ? 'Sim' : 'N√£o') . "\n\n";

    echo "2. Listando todos os usu√°rios do sistema...\n";

    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, 'https://flyingdonkeys.com.br/api/v1/User');
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_HTTPHEADER, ['X-Api-Key: 7a6c08d438ee131971f561fd836b5e15']);
    curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);
    curl_setopt($ch, CURLOPT_TIMEOUT, 30);

    $usersResponse = curl_exec($ch);
    $usersHttpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    curl_close($ch);

    if ($usersHttpCode == 200) {
        $users = json_decode($usersResponse, true);
        echo "üìã Total de usu√°rios: " . count($users['list']) . "\n\n";

        $apiUsers = [];
        $activeUsers = 0;

        foreach ($users['list'] as $user) {
            if ($user['isActive']) {
                $activeUsers++;
            }

            // Procurar usu√°rios relacionados a API
            if (
                stripos($user['userName'], 'api') !== false ||
                stripos($user['userName'], 'Api') !== false ||
                stripos($user['userName'], 'API') !== false ||
                $user['type'] == 'api'
            ) {
                $apiUsers[] = $user;
            }

            echo "üë§ " . $user['userName'] . " - " . ($user['isActive'] ? '‚úÖ ATIVO' : '‚ùå INATIVO') . "\n";
            echo "   üÜî ID: " . $user['id'] . "\n";
            echo "   üìä Tipo: " . ($user['type'] ?? 'N/A') . "\n";
            echo "   üìÖ Criado: " . ($user['createdAt'] ?? 'N/A') . "\n\n";
        }

        echo "üìä RESUMO DE USU√ÅRIOS:\n";
        echo "   Total: " . count($users['list']) . "\n";
        echo "   Ativos: $activeUsers\n";
        echo "   Relacionados a API: " . count($apiUsers) . "\n\n";

        if (!empty($apiUsers)) {
            echo "üéØ USU√ÅRIOS API ENCONTRADOS:\n";
            foreach ($apiUsers as $apiUser) {
                echo "   üë§ " . $apiUser['userName'] . " - " . ($apiUser['isActive'] ? '‚úÖ ATIVO' : '‚ùå INATIVO') . "\n";
                echo "   üÜî ID: " . $apiUser['id'] . "\n";
                echo "   üìä Tipo: " . ($apiUser['type'] ?? 'N/A') . "\n\n";
            }
        } else {
            echo "‚ö†Ô∏è NENHUM USU√ÅRIO API ENCONTRADO!\n\n";
        }
    } else {
        echo "‚ùå Erro ao buscar usu√°rios - HTTP: $usersHttpCode\n";
    }

    echo "3. Verificando permiss√µes do usu√°rio atual...\n";

    if (isset($userData['permissions'])) {
        $permissions = $userData['permissions'];
        echo "üìã Permiss√µes do usu√°rio atual:\n";

        $relevantEntities = ['lead', 'opportunity', 'workflow'];
        foreach ($relevantEntities as $entity) {
            if (isset($permissions[$entity])) {
                $entityPerms = $permissions[$entity];
                echo "   üìù $entity:\n";
                echo "      Create: " . ($entityPerms['create'] ? '‚úÖ' : '‚ùå') . "\n";
                echo "      Read: " . ($entityPerms['read'] ? '‚úÖ' : '‚ùå') . "\n";
                echo "      Edit: " . ($entityPerms['edit'] ? '‚úÖ' : '‚ùå') . "\n";
                echo "      Delete: " . ($entityPerms['delete'] ? '‚úÖ' : '‚ùå') . "\n";
            }
        }
    } else {
        echo "‚ö†Ô∏è Permiss√µes n√£o dispon√≠veis para visualiza√ß√£o\n";
    }
} else {
    echo "‚ùå Erro ao conectar - HTTP: $httpCode\n";
    echo "Resposta: " . substr($response, 0, 200) . "...\n";
}

echo "\n" . str_repeat("=", 60) . "\n";
echo "üéØ DIAGN√ìSTICO DE USU√ÅRIOS:\n";
echo str_repeat("=", 60) . "\n";

echo "\nüí° PROBLEMA IDENTIFICADO:\n";
echo "Se n√£o existe usu√°rio 'api', os workflows podem n√£o estar executando\n";
echo "porque n√£o h√° um usu√°rio espec√≠fico para execu√ß√£o de workflows.\n\n";

echo "üìã SOLU√á√ïES POSS√çVEIS:\n";
echo "1. Criar um usu√°rio 'api' espec√≠fico para workflows\n";
echo "2. Usar um usu√°rio administrativo existente\n";
echo "3. Verificar se h√° outro usu√°rio com permiss√µes adequadas\n";
echo "4. Configurar workflows para executar com usu√°rio espec√≠fico\n\n";

echo "üîß PR√ìXIMOS PASSOS:\n";
echo "1. Acesse: https://flyingdonkeys.com.br\n";
echo "2. V√° para: Administra√ß√£o ‚Üí Usu√°rios\n";
echo "3. Crie um usu√°rio 'api' ou use um existente\n";
echo "4. Configure permiss√µes adequadas para Lead e Opportunity\n";
echo "5. Verifique configura√ß√£o dos workflows\n";

echo "\n‚úÖ DIAGN√ìSTICO CONCLU√çDO!\n";
